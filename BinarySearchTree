package assign08;

import java.util.ArrayList;
import java.util.Collection;
import java.util.NoSuchElementException;

public class BinarySearchTree<Type extends Comparable<? super Type>> implements SortedSet<Type>{
	private BinaryNode<Type> root;
	private int size;
	
	public BinarySearchTree() {
		root = null;
		size = 0;
	}
	public boolean add(Type item) {
		BinaryNode<Type> temp = root;
		
		while(!(temp == null)) {
			if(temp.getData().compareTo(item) == 0){
				return false;
			}
			if(temp.getData().compareTo(item) > 0) {
				if(temp.getRChild() == null) {
					temp.setRChild(new BinaryNode<Type>(item));
					return true;

				}
				temp = (BinaryNode<Type>) temp.getRChild();
			}
			if(temp.getData().compareTo(item) < 0) {
				if(temp.getLChild() == null) {
					temp.setLChild(new BinaryNode<Type>(item));
					return true;
				}
				temp = (BinaryNode<Type>) temp.getLChild();
			}
		}	
		return false;
	}

	public boolean addAll(Collection<? extends Type> items) {
		for (Type i : items) {
			add(i);
		}
		return false;
	}

	
	public void clear() {
		root.setLChild(null);
		root.setRChild(null);
		root.setData(null);
	}

	@Override
	public boolean contains(Type item) {
		BinaryNode<Type> temp = root;
		
		while(!(temp == null)) {
			if(temp.getData().compareTo(item) == 0){
				return true;
			}
			if(temp.getData().compareTo(item) > 0) {
				if(temp.getRChild() == null) {
					return false;
				}
				temp = (BinaryNode<Type>) temp.getRChild();
			}
			if(temp.getData().compareTo(item) < 0) {
				if(temp.getLChild() == null) {
					return false;
				}
				temp = (BinaryNode<Type>) temp.getLChild();
			}
		}	
		return false;
	}

	@Override
	public boolean containsAll(Collection<? extends Type> items) {
		boolean tester = false;
		
		for(Type item : items) {
			tester = contains(item);
		}
		return false;
	}

	@Override
	public Comparable first() throws NoSuchElementException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Comparable last() throws NoSuchElementException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean remove(Comparable item) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean removeAll(Collection items) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public ArrayList toArrayList() {
		// TODO Auto-generated method stub
		return null;
	}

}

